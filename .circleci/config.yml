version: 2.1

executors:
  default_image:
    docker:
      - image: cimg/ruby:2.6.6-node
      - image: circleci/postgres:11.14
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ci_db_test

jobs:
  build:
    docker:
      - image: cimg/ruby:2.6.6-node
      - image: circleci/postgres:11.14
    environment:
      RAILS_ENV: test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ci_db_test
    steps:
      - checkout
      - run:
          name: Install Dockerize
          command: |
            if ! command -v dockerize &> /dev/null; then
              curl -sSL https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz | tar -C /usr/local/bin -xzv
            fi
      - run:
          name: Install Dependencies
          command: bundle install 
      - run:
          name: Wait for PostgreSQL
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Setup Database
          command: |
            cp config/database.yml.ci config/database.yml
            docker run --rm \
              -e PGPASSWORD=$POSTGRES_PASSWORD \
              --network host \
              postgres:11.14 \
              psql -h localhost -U $POSTGRES_USER -c "DROP DATABASE IF EXISTS $POSTGRES_DB;"
            docker run --rm \
              -e PGPASSWORD=$POSTGRES_PASSWORD \
              --network host \
              postgres:11.14 \
              psql -h localhost -U $POSTGRES_USER -c "CREATE DATABASE $POSTGRES_DB ENCODING 'unicode';"
            bundle exec rails db:schema:load
      - run:
          name: Run RSpec
          command: bundle exec rspec

workflows:
  version: 2
  main:
    jobs:
      - build
